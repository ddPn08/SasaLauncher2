name: Build Test

on: push

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest]

    steps:
      - name: Context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"

      - uses: actions/checkout@v2
        with:
          fetch-depth: 1

      - name: Use Node.js 16
        uses: actions/setup-node@v1
        with:
          node-version: '16'

      ##Tag Number input
      - name: Get latest release version tag number
        id: get_version
        uses: battila7/get-version-action@v2

      ##CreateAPP - yarn release
      - name: Install yarn
        run: npm install -g yarn ts-node

      - name: YARN install
        run: yarn install

      ##build
      - name: YARN Build
        run: yarn build --full
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GPGPASS: ${{ secrets.GPGPASS }}
          VERSION: ${{ steps.get_version.outputs.version-without-v }}

      ##ActionRelease - zip
      - uses: actions/upload-artifact@v1
        name: Action-Upload-MacOS1
        if: matrix.os == 'macos-latest'
        with:
          name: MacOS Release
          path: product

      - uses: actions/upload-artifact@v1
        name: Action-Upload-Windows1
        if: matrix.os == 'windows-latest'
        with:
          name: Windows Release
          path: product

      - uses: actions/upload-artifact@v1
        name: Action-Upload-Ubuntu1
        if: matrix.os == 'ubuntu-latest'
        with:
          name: Linux Release
          path: product